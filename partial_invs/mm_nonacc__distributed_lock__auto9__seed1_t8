conjecture (forall A000:node . ((~(transfer(zero, A000)))))
conjecture (exists A000:epoch . ((~(le(ep(first), A000)))))
conjecture (forall A000:node . (((~(held(A000))) | (~(le(ep(A000), zero))))))
conjecture (forall A000:node . ((exists A001:epoch . ((held(A000) | (~(le(A001, ep(A000)))))))))
conjecture (forall A000:node, A001:epoch . ((le(A001, ep(A000)) | (~(locked(A001, A000))))))
conjecture (forall A000:node . ((locked(ep(A000), A000) | (forall A001:epoch . ((~(locked(A001, A000))))))))
conjecture (forall A000:node, A001:epoch . ((transfer(A001, A000) | (~(locked(A001, A000))))))
conjecture (exists A000:node . ((locked(ep(A000), A000) | (~(le(ep(first), ep(A000)))) | (~(transfer(ep(first), first))))))
conjecture (forall A000:node . ((locked(ep(A000), A000) | (first = A000) | (forall A001:epoch . (le(ep(A000), A001))))))
conjecture (exists A000:node . ((forall A001:epoch . ((transfer(ep(A000), A000) | (~(held(A000))) | (~(transfer(A001, first))))))))
conjecture (exists A000:node . ((forall A001:epoch . ((transfer(ep(A000), A000) | (~(le(A001, ep(A000)))) | (~(transfer(A001, first))))))))
conjecture (forall A000:node . ((transfer(ep(A000), A000) | (~(held(A000))) | (forall A001:node, A002:epoch . ((~(transfer(A002, A001))))))))
conjecture (forall A000:node . ((transfer(ep(A000), A000) | (forall A002:epoch . (((~(le(A002, ep(A000)))) | (forall A001:node . ((~(transfer(A002, A001)))))))))))
conjecture (forall A000:node . ((locked(ep(A000), A000) | (forall A002:epoch . (((~(le(A002, ep(A000)))) | (forall A001:node . ((~(transfer(A002, A001)))))))))))
