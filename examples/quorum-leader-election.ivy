#lang ivy1.5

type node
type nset

relation isleader(N:node)
relation voted(N:node, M:node)
relation member(N: node, Q: nset)
relation majority(N:nset)
individual quorum : nset

axiom majority(S) & majority(Y) -> exists N . member(N, S) & member(N, T)

init ~voted(N, M)
init ~isleader(N)

action vote = {
  local v : node , n : node {
    assume (forall M:node . ~voted(v, M));
    voted(v, n) := true;
  }
}

action become_leader = {
  local n : node , s : nset {
    assume majority(s);
    assume forall M:node . member(M, s) -> voted(M, n);
    isleader(n) := true;
    quorum := s;
  }
}

conjecture (isleader(N) & isleader(M)) -> N = M
#conjecture voted(N,M) & voted(N,O) -> M = O
#conjecture isleader(N) -> (majority(quorum) & (member(M,quorum) -> voted(M, N)))
