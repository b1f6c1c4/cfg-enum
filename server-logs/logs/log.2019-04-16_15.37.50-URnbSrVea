./run.sh ./examples/leader-election.ivy 3 4 --seed 1555080134

Z3 version 4.8.4 - 64 bit

037da97c29436fd701ecaddcc6a2788f9500059a

diff --git a/src/main.cpp b/src/main.cpp
index 323a70d..9e8f53a 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -564,8 +564,8 @@ int main(int argc, char* argv[]) {
       int arity = atoi(argv[1]);
       int depth = atoi(argv[2]);
 
-      //synth_loop(module, arity, depth);
-      synth_loop_from_transcript(module, arity, depth);
+      synth_loop(module, arity, depth, NULL);
+      //synth_loop_from_transcript(module, arity, depth);
 
       /*
       z3::solver solver = z3::solver(ctx);
diff --git a/src/synth_loop.cpp b/src/synth_loop.cpp
index ab50b41..48b7de2 100644
--- a/src/synth_loop.cpp
+++ b/src/synth_loop.cpp
@@ -341,6 +341,7 @@ void add_counterexample(shared_ptr<Module> module, SketchFormula& sf, Counterexa
     sf.solver.add(is_true(module, sf, cex.is_true, candidate));
   }
   else if (cex.is_false) {
+    cex.is_false->dump();
     sf.solver.add(is_false(module, sf, cex.is_false));
   }
   else if (cex.hypothesis && cex.conclusion) {

["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["functionSort", [["uninterpretedSort", "node"]], ["uninterpretedSort", "id"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["booleanSort"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"]], ["uninterpretedSort", "id"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"]], ["uninterpretedSort", "id"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"]], ["uninterpretedSort", "id"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["functionSort", [["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "id"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "id"]
["booleanSort"]
["functionSort", [["uninterpretedSort", "node"]], ["uninterpretedSort", "id"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "node"], ["uninterpretedSort", "node"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["booleanSort"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
["functionSort", [["uninterpretedSort", "id"], ["uninterpretedSort", "node"]], ["booleanSort"]]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["booleanSort"]
["functionSort", [["uninterpretedSort", "node"]], ["uninterpretedSort", "id"]]
["uninterpretedSort", "node"]
["uninterpretedSort", "id"]
["uninterpretedSort", "node"]
["uninterpretedSort", "node"]
random seed = 1555080134
depth = 4, arity = 3
bmc_depth = 4

number of boolean variables: 2908
solver (1) : 198 ms
candidate: forall A . (forall B . (forall C . (AND[])))
counterexample type: SAFETY
Model sizes: node: 2, id: 2
Model:

node: 2
id: 2

btw(default) -> false
btw(node:1, node:1, node:1) -> false
btw(node:1, node:1, node:2) -> false
btw(node:1, node:2, node:1) -> false
btw(node:1, node:2, node:2) -> false
btw(node:2, node:1, node:1) -> false
btw(node:2, node:1, node:2) -> false
btw(node:2, node:2, node:1) -> false
btw(node:2, node:2, node:2) -> false

nid(default) -> id:1
nid(node:1) -> id:2
nid(node:2) -> id:1

leader(default) -> false
leader(node:1) -> true
leader(node:2) -> true

le(default) -> false
le(id:1, id:1) -> true
le(id:1, id:2) -> false
le(id:2, id:1) -> true
le(id:2, id:2) -> true

pnd(default) -> false


number of boolean variables: 3519
