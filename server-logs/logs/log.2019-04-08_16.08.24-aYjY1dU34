./run.sh examples/leader-election.ivy 3 5

Z3 version 4.8.4 - 64 bit

8fd92ffe2d84499b85b1fa4c57b72d255dd23180

diff --git a/src/synth_loop.cpp b/src/synth_loop.cpp
index 2ce944b..7c99283 100644
--- a/src/synth_loop.cpp
+++ b/src/synth_loop.cpp
@@ -72,7 +72,6 @@ Counterexample get_counterexample(
     init_solver.pop();
   }
 
-  /*
   z3::solver& conj_solver = conjctx->ctx->solver;
   conj_solver.push();
   conj_solver.add(conjctx->e->value2expr(candidate));
@@ -91,10 +90,9 @@ Counterexample get_counterexample(
   } else {
     conj_solver.pop();
   }
-  */
 
   value full_conj = v_and(module->conjectures);
-  value full_candidate = v_and({candidate, full_conj});
+  value full_candidate = candidate; //v_and({candidate, full_conj});
 
   z3::solver& solver = indctx->ctx->solver;
   solver.push();
@@ -110,10 +108,10 @@ Counterexample get_counterexample(
     shared_ptr<Model> m2 = m1_and_m2[1];
     solver.pop();
 
-    if (!m2->eval_predicate(full_conj)) {
-      printf("counterexample type: SAFETY\n");
-      cex.is_false = m1;
-    } else {
+    //if (!m2->eval_predicate(full_conj)) {
+      //printf("counterexample type: SAFETY\n");
+      //cex.is_false = m1;
+    //} else {
       /*
       Counterexample bmc_cex = get_bmc_counterexample(bmc, candidate);
       if (!bmc_cex.none) {
@@ -124,7 +122,7 @@ Counterexample get_counterexample(
       printf("counterexample type: INDUCTIVE\n");
       cex.hypothesis = m1;
       cex.conclusion = m2;
-    }
+    //}
 
     return cex;
   }

depth = 5, arity = 3
bmc_depth = 4

solver : 663 ms
candidate: forall A . (forall B . (forall C . (AND[])))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 4340 ms
candidate: forall A . (forall B . (forall C . (OR[])))
counterexample type: INIT
Model sizes: node: 1, id: 1

solver : 364 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & (AND[]) & (AND[])) & (((AND[]) & (AND[]) & (AND[])) & ((AND[]) & (AND[]) & (AND[])) & ((A) = (C))) & (~(leader(B))))))
counterexample type: INIT
Model sizes: node: 2, id: 2

solver : 1056 ms
candidate: forall A . (forall B . (forall C . ((AND[]) & (~(leader(B))) & (~(leader(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 1, id: 1

solver : 252 ms
candidate: forall A . (forall B . (forall C . ((~(leader(C))) | (le(nid(B), nid(C))) | (le(nid(B), nid(C))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 539 ms
candidate: forall A . (forall B . (forall C . ((~(leader(B))) | (le(nid(B), nid(C))) | (le(nid(B), nid(C))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 5037 ms
candidate: forall A . (forall B . (forall C . ((AND[]) & (AND[]) & ((AND[]) & (~(leader(A))) & (~(pnd(nid(C), B)))))))
counterexample type: INDUCTIVE
Model sizes: node: 1, id: 1

solver : 915 ms
candidate: forall A . (forall B . (forall C . ((~(leader(C))) | ((A) = (C)) | (pnd(nid(A), A)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 317 ms
candidate: forall A . (forall B . (forall C . ((~(leader(A))) | ((A) = (C)) | (pnd(nid(C), B)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 1826 ms
candidate: forall A . (forall B . (forall C . ((~(leader(A))) | (~(leader(B))) | (le(nid(A), nid(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 92063 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & ((((A) = (A)) & ((A) = (A)) & ((A) = (C))) | ((btw(C, B, B)) & (btw(C, B, B)) & (btw(C, B, B))) | (((OR[]) | (OR[]) | (OR[])) | (btw(B, C, A)) | (btw(B, C, C)))) & (~(pnd(nid(C), C)))) | ((((OR[]) & ((OR[]) | (OR[]) | (OR[])) & (btw(C, B, B))) | ((A) = (B)) | (btw(B, C, C))) & (((OR[]) & ((B) = (C)) & ((B) = (C))) | (((A) = (A)) & ((A) = (B)) & ((B) = (C))) | (leader(B))) & (pnd(nid(A), C))) | ((OR[]) | ((AND[]) & ((A) ~= (C)) & (~(leader(C)))) | (btw(C, C, A))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 729 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & ((((A) = (A)) & ((A) = (A)) & ((A) = (C))) | ((btw(C, B, C)) & (btw(C, B, C)) & (btw(C, B, C))) | (((OR[]) | (OR[]) | (OR[])) | (btw(B, C, A)) | (btw(B, C, C)))) & (~(pnd(nid(B), C)))) | ((((OR[]) & ((OR[]) | (OR[]) | (OR[])) & (btw(C, B, A))) | ((A) = (B)) | (btw(B, C, C))) & (((OR[]) & ((B) = (C)) & ((B) = (C))) | (((A) = (A)) & ((A) = (B)) & ((B) = (C))) | (leader(B))) & (pnd(nid(A), C))) | ((OR[]) | ((AND[]) & ((A) ~= (C)) & (~(leader(C)))) | (btw(C, C, B))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 65539 ms
candidate: forall A . (forall B . (forall C . ((OR[]) | ((AND[]) & (AND[]) & (le(nid(B), nid(C)))) | (((nid(B)) ~= (nid(C))) & (~(leader(C))) & (~(pnd(nid(B), C)))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 1489076 ms
candidate: forall A . (forall B . (forall C . (((~(pnd(nid(B), A))) & ((A) = (B)) & ((A) = (B))) | (~(leader(A))) | (~(leader(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 1, id: 1

solver : 21367 ms
candidate: forall A . (forall B . (forall C . (((((B) ~= (C)) & (~(leader(B))) & (leader(C))) & ((~(btw(B, A, A))) & (~(btw(C, B, B))) & (~(btw(C, B, C)))) & (~(pnd(nid(C), C)))) | (~(leader(C))) | ((B) = (C)))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 55449 ms
candidate: forall A . (forall B . (forall C . ((((((AND[]) & (AND[]) & (AND[])) & ((A) = (C)) & ((A) = (C))) | (leader(C)) | (leader(C))) & (~(leader(B))) & (~(pnd(nid(B), C)))) | (((OR[]) | (OR[]) | (OR[])) | (~(le(nid(A), nid(C)))) | ((A) = (B))) | (((((A) = (B)) | (btw(C, B, C)) | (btw(C, B, C))) | (((A) = (B)) | (btw(C, B, C)) | (btw(C, C, C))) | ((B) ~= (B))) | ((btw(C, B, A)) | (le(nid(B), nid(A))) | (le(nid(B), nid(C)))) | (btw(A, B, C))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 544725 ms
candidate: forall A . (forall B . (forall C . ((OR[]) | (((OR[]) | (OR[]) | (~(leader(B)))) & (~(pnd(nid(B), B))) & ((A) = (A))) | ((OR[]) | (le(nid(A), nid(B))) | (le(nid(C), nid(B)))))))
counterexample type: INDUCTIVE
Model sizes: node: 3, id: 3

solver : 278806 ms
candidate: forall A . (forall B . (forall C . ((((le(nid(A), nid(B))) & (le(nid(A), nid(B))) & (le(nid(A), nid(B)))) & (~(btw(C, B, C))) & (le(nid(B), nid(C)))) | ((~(leader(C))) & (~(pnd(nid(A), C))) & (~(pnd(nid(B), B)))) | ((nid(A)) = (nid(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

