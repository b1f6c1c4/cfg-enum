./run.sh examples/leader-election.ivy 3 4 --random

Z3 version 4.8.4 - 64 bit

02debafd2d2988d08caa322841b47575bf0ea4b7

diff --git a/src/main.cpp b/src/main.cpp
index e1dd7e9..faab94f 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -536,7 +536,7 @@ int main(int argc, char* argv[]) {
   printf("random seed = %d\n", seed);
   srand(seed);
 
-  try {
+  //try {
     if (!just_enumeration) {
       assert(module->templates.size() == 1);
       /*
@@ -586,8 +586,8 @@ int main(int argc, char* argv[]) {
       std::cout << "end" << std::endl;
     }
 
-  } catch (z3::exception exc) {
-    printf("got z3 exception: %s\n", exc.msg());
-    throw;
-  }
+  //} catch (z3::exception exc) {
+  //  printf("got z3 exception: %s\n", exc.msg());
+  //  throw;
+  //}
 }

random seed = 1555010860
depth = 4, arity = 3
bmc_depth = 4

solver (1) : 79 ms
candidate: forall A . (forall B . (forall C . (AND[])))
counterexample type: SAFETY
Model sizes: node: 2, id: 2

solver (2) : 638 ms
candidate: forall A . (forall B . (forall C . (OR[])))
counterexample type: INIT
Model sizes: node: 1, id: 1

solver (3) : 52 ms
candidate: forall A . (forall B . (forall C . (~(leader(C)))))
counterexample type: INIT (after some steps)
Model sizes: node: 1, id: 1

solver (4) : 22 ms
candidate: forall A . (forall B . (forall C . (le(nid(A), nid(C)))))
counterexample type: INIT
Model sizes: node: 2, id: 2

solver (5) : 135 ms
candidate: forall A . (forall B . (forall C . ((le(nid(A), nid(C))) | (~(leader(C))) | (~(leader(C))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver (6) : 133 ms
candidate: forall A . (forall B . (forall C . ((le(nid(A), nid(C))) | (~(leader(A))) | (~(leader(C))))))
counterexample type: INDUCTIVE
simplifying -> SAFETY
Model sizes: node: 2, id: 2

