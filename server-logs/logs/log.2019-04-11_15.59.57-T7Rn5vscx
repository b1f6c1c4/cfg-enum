./run.sh examples/leader-election.ivy 3 4 --random

Z3 version 4.8.4 - 64 bit

02debafd2d2988d08caa322841b47575bf0ea4b7

diff --git a/src/main.cpp b/src/main.cpp
index e1dd7e9..faab94f 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -536,7 +536,7 @@ int main(int argc, char* argv[]) {
   printf("random seed = %d\n", seed);
   srand(seed);
 
-  try {
+  //try {
     if (!just_enumeration) {
       assert(module->templates.size() == 1);
       /*
@@ -586,8 +586,8 @@ int main(int argc, char* argv[]) {
       std::cout << "end" << std::endl;
     }
 
-  } catch (z3::exception exc) {
-    printf("got z3 exception: %s\n", exc.msg());
-    throw;
-  }
+  //} catch (z3::exception exc) {
+  //  printf("got z3 exception: %s\n", exc.msg());
+  //  throw;
+  //}
 }

random seed = 1555012797
depth = 4, arity = 3
bmc_depth = 4

solver (1) : 73 ms
candidate: forall A . (forall B . (forall C . (AND[])))
counterexample type: SAFETY
Model sizes: node: 2, id: 2

solver (2) : 604 ms
candidate: forall A . (forall B . (forall C . (OR[])))
counterexample type: INIT
Model sizes: node: 1, id: 1

solver (3) : 46 ms
candidate: forall A . (forall B . (forall C . (~(leader(C)))))
counterexample type: INIT (after some steps)
Model sizes: node: 1, id: 1

solver (4) : 21 ms
candidate: forall A . (forall B . (forall C . (le(nid(A), nid(C)))))
counterexample type: INIT
Model sizes: node: 2, id: 2

solver (5) : 116 ms
candidate: forall A . (forall B . (forall C . ((le(nid(A), nid(C))) | (~(leader(C))) | (~(leader(C))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver (6) : 114 ms
candidate: forall A . (forall B . (forall C . ((le(nid(A), nid(C))) | (~(leader(A))) | (~(leader(C))))))
counterexample type: INDUCTIVE
simplifying -> SAFETY
Model sizes: node: 2, id: 2

solver (7) : 3550 ms
candidate: forall A . (forall B . (forall C . ((OR[]) | ((AND[]) & ((A) = (C)) & (~(pnd(nid(C), B)))) | ((~(leader(B))) & (~(leader(C))) & (~(pnd(nid(C), B)))))))
counterexample type: INIT (after some steps)
Model sizes: node: 1, id: 1

solver (8) : 1328 ms
candidate: forall A . (forall B . (forall C . ((((nid(A)) = (nid(B))) & (leader(C)) & (~(pnd(nid(B), C)))) | ((btw(C, A, A)) | (~(leader(A))) | (~(leader(C)))) | (~(leader(B))))))
counterexample type: INIT (after some steps)
Model sizes: node: 1, id: 1

solver (9) : 47 ms
candidate: forall A . (forall B . (forall C . ((((nid(A)) = (nid(B))) & (leader(B)) & (~(pnd(nid(B), A)))) | (((nid(B)) = (nid(C))) | (~(leader(A))) | (~(leader(A)))) | (~(leader(B))))))
counterexample type: INDUCTIVE
simplifying -> SAFETY
Model sizes: node: 2, id: 2

solver (10) : 81 ms
candidate: forall A . (forall B . (forall C . ((((nid(A)) = (nid(B))) & (~(le(nid(C), nid(A)))) & (~(pnd(nid(B), A)))) | (((nid(B)) = (nid(C))) | (~(leader(A))) | (~(leader(A)))) | (~(leader(B))))))
counterexample type: INIT (after some steps)
Model sizes: node: 2, id: 2

solver (11) : 6771 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & (~(leader(C))) & (~(le(nid(B), nid(C))))) | ((~(le(nid(C), nid(B)))) & (~(pnd(nid(B), B))) & (~(pnd(nid(C), B)))) | ((nid(B)) = (nid(C))))))
counterexample type: INIT (after some steps)
Model sizes: node: 2, id: 2

solver (12) : 103 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & (~(leader(C))) & (~(le(nid(B), nid(C))))) | ((~(le(nid(C), nid(B)))) & (~(pnd(nid(B), B))) & (~(pnd(nid(C), C)))) | ((nid(B)) = (nid(C))))))
counterexample type: INIT (after some steps)
Model sizes: node: 2, id: 2

solver (13) : 108 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & (~(leader(C))) & (~(le(nid(B), nid(C))))) | ((~(le(nid(C), nid(B)))) & (~(pnd(nid(B), B))) & (~(pnd(nid(B), C)))) | ((nid(B)) = (nid(C))))))
counterexample type: INIT (after some steps)
Model sizes: node: 2, id: 2

solver (14) : 124153 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & ((leader(A)) & (~(leader(B))) & (~(leader(B)))) & (~(pnd(nid(C), C)))) | ((OR[]) & ((OR[]) | (btw(A, B, A)) | (btw(C, B, C))) & ((nid(A)) = (nid(B)))) | ((((A) = (B)) | (~(leader(A))) | (~(leader(A)))) | (~(le(nid(C), nid(A)))) | (~(le(nid(C), nid(B))))))))
counterexample type: INDUCTIVE
simplifying -> SAFETY
Model sizes: node: 2, id: 2

solver (15) : 15212 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & (~(leader(C))) & (~(pnd(nid(C), C)))) | (le(nid(B), nid(C))) | (~(le(nid(A), nid(B)))))))
counterexample type: INDUCTIVE
Model sizes: node: 3, id: 3

solver (16) : 62614 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & ((btw(C, A, A)) | (btw(C, A, C)) | (~(leader(A)))) & (~(pnd(nid(C), A)))) | (((~(btw(B, C, A))) & (~(leader(A))) & (~(leader(A)))) & (le(nid(B), nid(C))) & (~(le(nid(B), nid(A))))) | ((btw(A, A, A)) | (le(nid(B), nid(A))) | (~(le(nid(C), nid(C))))))))
counterexample type: INIT (after some steps)
Model sizes: node: 3, id: 3

solver (17) : 673 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & ((btw(C, A, A)) | (btw(C, A, C)) | (~(leader(A)))) & (~(pnd(nid(C), A)))) | (((~(btw(B, C, A))) & (~(leader(A))) & (~(leader(A)))) & (le(nid(B), nid(C))) & (~(le(nid(B), nid(A))))) | ((btw(A, B, C)) | (le(nid(B), nid(A))) | (~(le(nid(C), nid(C))))))))
found invariant: forall A . (forall B . (forall C . (((AND[]) & ((btw(C, A, A)) | (btw(C, A, C)) | (~(leader(A)))) & (~(pnd(nid(C), A)))) | (((~(btw(B, C, A))) & (~(leader(A))) & (~(leader(A)))) & (le(nid(B), nid(C))) & (~(le(nid(B), nid(A))))) | ((btw(A, B, C)) | (le(nid(B), nid(A))) | (~(le(nid(C), nid(C))))))))
total solver time : 215614 ms

real	3m40.637s
user	3m40.513s
sys	0m0.121s
