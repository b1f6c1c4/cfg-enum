./run.sh examples/leader-election.ivy 3 5

Z3 version 4.8.4 - 64 bit

7520662e7fcc2a7066c2bddba83e9421fd5a0320

diff --git a/src/synth_loop.cpp b/src/synth_loop.cpp
index 7b6ff69..fe5fe96 100644
--- a/src/synth_loop.cpp
+++ b/src/synth_loop.cpp
@@ -70,7 +70,6 @@ Counterexample get_counterexample(
     init_solver.pop();
   }
 
-  /*
   z3::solver& conj_solver = conjctx->ctx->solver;
   conj_solver.push();
   conj_solver.add(conjctx->e->value2expr(candidate));
@@ -89,10 +88,9 @@ Counterexample get_counterexample(
   } else {
     conj_solver.pop();
   }
-  */
 
   value full_conj = v_and(module->conjectures);
-  value full_candidate = v_and({candidate, full_conj});
+  value full_candidate = candidate; //v_and({candidate, full_conj});
 
   z3::solver& solver = indctx->ctx->solver;
   solver.push();
@@ -109,19 +107,19 @@ Counterexample get_counterexample(
           solver, module, *indctx->e2);
     solver.pop();
 
-    if (!m2->eval_predicate(full_conj)) {
-      printf("counterexample type: SAFETY\n");
-      cex.is_false = m1;
-    } else {
-      Counterexample bmc_cex = get_bmc_counterexample(bmc, candidate);
-      if (!bmc_cex.none) {
-        return bmc_cex;
-      }
+    //if (!m2->eval_predicate(full_conj)) {
+    //  printf("counterexample type: SAFETY\n");
+    //  cex.is_false = m1;
+    //} else {
+      //Counterexample bmc_cex = get_bmc_counterexample(bmc, candidate);
+      //if (!bmc_cex.none) {
+      //  return bmc_cex;
+      //}
 
       printf("counterexample type: INDUCTIVE\n");
       cex.hypothesis = m1;
       cex.conclusion = m2;
-    }
+    //}
 
     return cex;
   }

depth = 5, arity = 3
bmc_depth = 4

solver : 570 ms
candidate: forall A . (forall B . (forall C . (AND[])))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 4026 ms
candidate: forall A . (forall B . (forall C . (OR[])))
counterexample type: INIT
Model sizes: node: 1, id: 1

solver : 289 ms
candidate: forall A . (forall B . (forall C . (((AND[]) & (AND[]) & (AND[])) & (((AND[]) & (AND[]) & (AND[])) & ((AND[]) & (AND[]) & (AND[])) & ((A) = (C))) & (~(leader(B))))))
counterexample type: INIT
Model sizes: node: 2, id: 3

solver : 875 ms
candidate: forall A . (forall B . (forall C . ((AND[]) & (~(leader(B))) & (~(leader(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 1, id: 2

solver : 724 ms
candidate: forall A . (forall B . (forall C . ((~(leader(C))) | (btw(B, B, C)) | (le(nid(B), nid(A))))))
counterexample type: INDUCTIVE
Model sizes: node: 3, id: 3

solver : 2163 ms
candidate: forall A . (forall B . (forall C . ((~(leader(B))) | (btw(B, B, B)) | (le(nid(B), nid(A))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 2

solver : 1300 ms
candidate: forall A . (forall B . (forall C . ((~(leader(C))) & (~(pnd(nid(C), A))) & (le(nid(B), nid(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 2, id: 3

solver : 430 ms
candidate: forall A . (forall B . (forall C . ((~(leader(C))) & (~(pnd(nid(A), A))) & (le(nid(B), nid(B))))))
counterexample type: INDUCTIVE
Model sizes: node: 3, id: 3

solver : 7975 ms
candidate: forall A . (forall B . (forall C . ((((~(leader(C))) & (le(nid(A), nid(A))) & (le(nid(C), nid(C)))) | ((OR[]) | (btw(B, A, A)) | (btw(C, C, C))) | (btw(B, C, B))) | ((btw(C, B, A)) | (pnd(nid(B), A)) | (pnd(nid(C), B))) | ((A) = (B)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 735 ms
candidate: forall A . (forall B . (forall C . ((((~(leader(C))) & (le(nid(A), nid(A))) & (le(nid(C), nid(C)))) | ((OR[]) | (btw(B, A, A)) | (btw(C, C, C))) | (btw(B, C, B))) | ((btw(C, B, A)) | (pnd(nid(B), A)) | (pnd(nid(B), C))) | ((A) = (B)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 5064 ms
candidate: forall A . (forall B . (forall C . ((~(leader(B))) | (le(nid(B), nid(A))) | (pnd(nid(A), C)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 584 ms
candidate: forall A . (forall B . (forall C . ((~(leader(A))) | (le(nid(B), nid(A))) | (pnd(nid(B), C)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 857 ms
candidate: forall A . (forall B . (forall C . ((~(leader(B))) | ((nid(A)) = (nid(B))) | (pnd(nid(A), C)))))
counterexample type: SAFETY
Model sizes: node: 2, id: 3

solver : 2762 ms
